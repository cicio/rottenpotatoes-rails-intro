class MoviesController < ApplicationController

  def movie_params
    params.require(:movie).permit(:title, :rating, :description, :release_date)
  end

  def show
    id = params[:id] # retrieve movie ID from URI route
    @movie = Movie.find(id) # look up movie by unique ID
    # will render app/views/movies/show.<extension> by default
  end

  def index
    @all_ratings = Movie.all_ratings
    #@sort_by = params[:id]
    
    if params[:ratings]
      session[:ratings]
      @selections = params[:ratings].keys
      session[:ratings] = @selections
    elsif params[:commit] == "Refresh"
      @selections = session[:ratings]
    
    else
      @selections = @all_ratings
    end
    if params[:id]
      @movies = Movie.order(params[:id].gsub(/_header/,"").to_sym).
      where(rating: @selections)
      params[:id] =~ /title/ ? (@t,@r = "hilite","") : (@r,@t = "hilite","")
      session[:id] = params[:id] 
    else
      params[:id] = session[:id]
      @movies = Movie.order(:id).where(rating: @selections)
      @t,@r = '',''
    end
  end

  def new
    # default: render 'new' template
  end

  def create
    @movie = Movie.create!(movie_params)
    flash[:notice] = "#{@movie.title} was successfully created."
    redirect_to movies_path
  end

  def edit
    @movie = Movie.find params[:id]
  end

  def update
    @movie = Movie.find params[:id]
    @movie.update_attributes!(movie_params)
    flash[:notice] = "#{@movie.title} was successfully updated."
    redirect_to movie_path(@movie)
  end

  def destroy
    @movie = Movie.find(params[:id])
    @movie.destroy
    flash[:notice] = "Movie '#{@movie.title}' deleted."
    redirect_to movies_path
  end

end
